
package View;
import java.awt.Dimension;
import java.util.HashSet;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.event.MouseInputListener;
import org.jxmapviewer.OSMTileFactoryInfo;
import org.jxmapviewer.input.PanMouseInputListener;
import org.jxmapviewer.viewer.DefaultTileFactory;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.viewer.TileFactoryInfo;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jxmapviewer.JXMapKit;
import org.jxmapviewer.viewer.WaypointPainter;
import waypoint.EventWaypoint;
import waypoint.MyWaypoint;
import waypoint.WaypointRender;


public class Cointrasur extends javax.swing.JFrame {
    private final Set<MyWaypoint> waypoints = new HashSet<>();
    private EventWaypoint event;
   int xMouse,yMouse;
    public Cointrasur() {
        
        initComponents();
        init();
        this.setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/newlogo.png")).getImage());
        
        //simular el recorrido del bus
        timer.schedule(tarea, 0, 1000);
        timer.schedule(tarea2, 0, 3000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Rutas = new javax.swing.JButton();
        regresar = new javax.swing.JButton();
        mapagenral1 = new javax.swing.JButton();
        jXMapViewer = new org.jxmapviewer.JXMapViewer();
        fondoL = new javax.swing.JLabel();
        CURSOR = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Rutas.setBackground(new java.awt.Color(255, 255, 255));
        Rutas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Rutas.png"))); // NOI18N
        Rutas.setBorder(null);
        Rutas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Rutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RutasActionPerformed(evt);
            }
        });
        jPanel1.add(Rutas, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        regresar.setBackground(new java.awt.Color(255, 255, 255));
        regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regresar (2).png"))); // NOI18N
        regresar.setBorder(null);
        regresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });
        jPanel1.add(regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, -1, -1));

        mapagenral1.setBackground(new java.awt.Color(255, 255, 255));
        mapagenral1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mapageneral.png"))); // NOI18N
        mapagenral1.setBorder(null);
        mapagenral1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mapagenral1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapagenral1ActionPerformed(evt);
            }
        });
        jPanel1.add(mapagenral1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, -1));
        jPanel1.add(jXMapViewer, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 370, 490));

        fondoL.setBackground(new java.awt.Color(255, 255, 255));
        fondoL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/menucointrasur.png"))); // NOI18N
        fondoL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(fondoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 610, 530));

        CURSOR.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                CURSORMouseDragged(evt);
            }
        });
        CURSOR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CURSORMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CURSORMousePressed(evt);
            }
        });
        jPanel1.add(CURSOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CURSORMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CURSORMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xMouse,y-yMouse);
    }//GEN-LAST:event_CURSORMouseDragged

    private void CURSORMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CURSORMouseClicked

    }//GEN-LAST:event_CURSORMouseClicked

    private void CURSORMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CURSORMousePressed
        xMouse=evt.getX();
        yMouse=evt.getY();
        

    }//GEN-LAST:event_CURSORMousePressed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
      Login lr = new Login();
       lr.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_regresarActionPerformed

    private void mapagenral1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapagenral1ActionPerformed
        // TODO add your handling code here:
        MapaGeneralFrame mapaGeneralFrame = new MapaGeneralFrame();
        mapaGeneralFrame.setVisible(true);
    }//GEN-LAST:event_mapagenral1ActionPerformed

    private void RutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RutasActionPerformed
    RutastCoin vertc = new RutastCoin();
      vertc.setVisible(true);
      this.dispose();       
    }//GEN-LAST:event_RutasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cointrasur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cointrasur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cointrasur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cointrasur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cointrasur().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CURSOR;
    private javax.swing.JButton Rutas;
    private javax.swing.JLabel fondoL;
    private javax.swing.JPanel jPanel1;
    private org.jxmapviewer.JXMapViewer jXMapViewer;
    private javax.swing.JButton mapagenral1;
    private javax.swing.JButton regresar;
    // End of variables declaration//GEN-END:variables

    private void init() {
        TileFactoryInfo info = new OSMTileFactoryInfo(); 
        DefaultTileFactory tileFactory = new DefaultTileFactory(info);
        jXMapViewer.setTileFactory(tileFactory);
        GeoPosition geo = new GeoPosition(10.4065816,-75.5046746);
        jXMapViewer.setAddressLocation(geo);
        jXMapViewer.setZoom(2);
        event = getEvent();
        
        //eventos para mover el mouse
         MouseInputListener mm = new PanMouseInputListener(jXMapViewer);
        jXMapViewer.addMouseListener(mm);
        jXMapViewer.addMouseMotionListener(mm);
    }
    
    private void addWaypoint(MyWaypoint waypoint){
        for(MyWaypoint d: waypoints){
            jXMapViewer.remove(d.getButton());
        }
        waypoints.add(waypoint);
        initWaypoint();
    }

    private void initWaypoint() {
        WaypointPainter<MyWaypoint> wp = new WaypointRender();
        wp.setWaypoints(waypoints);
        jXMapViewer.setOverlayPainter(wp);
        for(MyWaypoint d:waypoints){
            jXMapViewer.add(d.getButton());
        }  
    }
    
    private EventWaypoint getEvent() {
        return new EventWaypoint() {
            @Override
            public void selected(MyWaypoint waypoint) {
                JOptionPane.showMessageDialog(Cointrasur.this, waypoint.getName());
            }
        };
    }
    
    private void clearWaypoint() {
        for (MyWaypoint d : waypoints) {
            jXMapViewer.remove(d.getButton());
        }
        waypoints.clear();
        initWaypoint();
    }
    //tiempo
    Timer timer = new Timer();
    
    TimerTask tarea = new TimerTask() {
            double l= 10.406679;               
            double ln =-75.502860;
            double r = 10.406449;
            double rn =-75.503202;
            double t12 = 10.406996;
            double t12n = -75.504579;
            
            @Override
            public void run() {
               addWaypoint(new MyWaypoint("Socorro", event, new GeoPosition(l, ln)));
                ln-=0.0000090;
                l+=0.00000044;  
               addWaypoint(new MyWaypoint("Sanfernando", event, new GeoPosition(r, rn))); 
               rn+=0.0000075;
               r+=0.00000104;
               addWaypoint(new MyWaypoint("Socorro Bosque", event, new GeoPosition(t12, t12n)));
               t12n-=0.0000090;
               t12+=0.00000044; 
               
            } 
        };
    
    TimerTask tarea2 = new TimerTask() {
            @Override
            public void run() {
                clearWaypoint();
            }
        };
}

class MapaGeneralFrame extends JFrame {
    public MapaGeneralFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setTitle("Mapa General");
    }

    private void initComponents() {
        // Crea un JXMapKit para mostrar el mapa general
        JXMapKit jXMapKit = new JXMapKit();
        jXMapKit.setDefaultProvider(JXMapKit.DefaultProviders.OpenStreetMaps);
        jXMapKit.setAddressLocation(new GeoPosition(10.405508,-75.503549)); 

        // Agrega el JXMapKit al JFrame
        add(jXMapKit);
        
        
        setSize(800, 600); 
        jXMapKit.setPreferredSize(new Dimension(800, 600));
        
        pack();
    }
}